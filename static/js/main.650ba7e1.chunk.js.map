{"version":3,"sources":["components/Nav/index.js","components/Card/index.js","components/Main/index.js","components/Jumbo/index.js","pages/SynthyClicky.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","href","scores","Card","onClick","pictureClick","id","shuffle","src","image","key","alt","clicked","Main","synthImage","map","synthCard","components_Card","handlePictureClick","shuffleArray","Jumbo","SynthyClicky","state","synths","score","highscore","initial","console","log","_this","setState","setClickedTrue","imageClicked","Object","toConsumableArray","find","item","alert","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","components_Nav","this","components_Jumbo","components_Main","Component","App","pages_SynthyClicky","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iTA0BeA,MAxBf,SAAaC,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,cAAtB,uBAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,uBAAtB,0BAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,uBAAtB,UACUJ,EAAMM,kBCFXC,MAbf,SAAcP,GACZ,OACEC,EAAAC,EAAAC,cAAA,OACEC,UAAU,kBACVI,QAAS,kBAAMR,EAAMS,aAAaT,EAAMU,MAExCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBI,QAASR,EAAMW,SAC5CV,EAAAC,EAAAC,cAAA,OAAKS,IAAKZ,EAAMa,MAAOC,IAAKd,EAAMU,GAAIK,IAAI,GAAGC,QAAShB,EAAMgB,mBCiBrDC,MAvBf,SAAcjB,GAQZ,OACEC,EAAAC,EAAAC,cAAA,WACGH,EAAMkB,WAAWC,IAAI,SAAAC,GAAS,OAC7BnB,EAAAC,EAAAC,cAACkB,EAAD,CACER,MAAOO,EAAUP,MACjBC,IAAKM,EAAUV,GACfD,aAAc,kBAbJC,EAamBU,EAAUV,QAZ7CV,EAAMsB,mBAAmBZ,GAD3B,IAAkBA,GAcVC,QAASX,EAAMuB,aACfP,QAASI,EAAUJ,cCLdQ,MAbf,WACE,OACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,kCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,+CCkMOqB,oNAhMbC,MAAQ,CACNC,OAAQ,CACN,CACEd,MACE,kEACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,iFACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,iFACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,wEACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,2EACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,mEACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,4EACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,+EACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,2EACFH,GAAI,EACJM,QAAS,IAGbY,MAAO,EACPC,UAAW,KAGbC,QAAU,CACR,CACEjB,MAAO,kEACPH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,iFACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,iFACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,wEACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,2EACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MAAO,mEACPH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,4EACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,+EACFH,GAAI,EACJM,QAAS,GAEX,CACEH,MACE,2EACFH,GAAI,EACJM,QAAS,MAQbM,mBAAqB,SAAAZ,GACnBqB,QAAQC,IAAI,eAEZC,EAAKC,SAAS,CACZN,MAAOK,EAAKP,MAAME,MAAQlB,IAG5BuB,EAAKE,eAAezB,GACpBuB,EAAKC,SAAS,CACZL,UAAWI,EAAKP,MAAME,WAI1BO,eAAiB,SAAAzB,GACfqB,QAAQC,IAAI,6BAA+BtB,GAC3C,IACM0B,EADIC,OAAAC,EAAA,EAAAD,CAAOJ,EAAKP,MAAMC,QACAY,KAAK,SAAAC,GAC/B,OAAOA,EAAK9B,KAAOA,IAGhB0B,EAAapB,SAKhByB,MAAM,YACNR,EAAKC,SAAS,CAAEN,MAAO,IAEvBK,EAAKC,SAAS,CAAEP,OAAQM,EAAKH,YAP7BM,EAAapB,QAAU,EACvBiB,EAAKC,SAASE,GACdL,QAAQC,IAAII,IAOdL,QAAQC,IAAII,MAGdb,aAAe,SAAAmB,GACbT,EAAKC,SAAS,CAAEP,OAAQM,EAAKtB,QAAQsB,EAAKP,MAAMC,aAGlDhB,QAAU,SAAA+B,GAMR,IALA,IACEC,EACAC,EAFEC,EAAeH,EAAMI,OAKlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,sFAzDPX,QAAQC,IAAI,0CA6DZ,OACE/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+C,EAAD,CAAK5C,OAAQ6C,KAAKzB,MAAME,MAAOC,UAAWsB,KAAKzB,MAAMG,YACrD5B,EAAAC,EAAAC,cAACiD,EAAD,MACAnD,EAAAC,EAAAC,cAACkD,EAAD,CACEnC,WAAYiC,KAAKzB,MAAMC,OACvBL,mBAAoB6B,KAAK7B,mBACzBC,aAAc4B,KAAK5B,uBA1LF+B,cCMZC,MARf,WACE,OACEtD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqD,EAAD,QCGcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.650ba7e1.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Nav(props) {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-info sticky-top\">\n      <ul className=\"nav nav-pills nav-fill\">\n        <li className=\"navbar-brand\">\n          <a href=\"/\" className=\"text-white\">\n            Synthy Clicky Game\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a href=\"/\" className=\"nav-link text-white\">\n            Click on a Synth Pic!\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a href=\"/\" className=\"nav-link text-white\">\n            Score: {props.scores}\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div\n      className=\"card float-left\"\n      onClick={() => props.pictureClick(props.id)}\n    >\n      <div className=\"img-container\" onClick={props.shuffle}>\n        <img src={props.image} key={props.id} alt=\"\" clicked={props.clicked} />\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../Card\";\nimport \"./style.css\";\n\nfunction Main(props) {\n  function picClick(id) {\n    props.handlePictureClick(id);\n  }\n\n  function shuffle(props) {\n    props.shuffleArray();\n  }\n  return (\n    <div>\n      {props.synthImage.map(synthCard => (\n        <Card\n          image={synthCard.image}\n          key={synthCard.id}\n          pictureClick={() => picClick(synthCard.id)}\n          shuffle={props.shuffleArray}\n          clicked={synthCard.clicked}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction Jumbo() {\n  return (\n    <div>\n      <div className=\"jumbotron jumbotron-fluid bg-dark text-center\">\n        <h1 className=\"display-4 text-white\">This is the Synth Clicker Game</h1>\n        <p className=\"lead text-white\">\n          You can only click on each picture once.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbo;\n","import React, { Component } from \"react\";\nimport Nav from \"../components/Nav\";\n\nimport Main from \"../components/Main\";\nimport Jumbo from \"../components/Jumbo\";\n\nimport Shuffle from \"shuffle-array\";\n\nclass SynthyClicky extends Component {\n  state = {\n    synths: [\n      {\n        image:\n          \"http://www.vintagesynth.com/sites/default/files/2017-05/p08.jpg\",\n        id: 0,\n        clicked: 0\n      },\n      {\n        image:\n          \"http://www.vintagesynth.com/sites/default/files/2017-05/vermona_drm1_mkiii.jpg\",\n        id: 1,\n        clicked: 0\n      },\n      {\n        image:\n          \"http://www.vintagesynth.com/sites/default/files/2017-05/buchla700_audities.jpg\",\n        id: 2,\n        clicked: 0\n      },\n      {\n        image:\n          \"http://www.vintagesynth.com/sites/default/files/2017-05/minitmoog.jpg\",\n        id: 3,\n        clicked: 0\n      },\n      {\n        image:\n          \"http://www.vintagesynth.com/sites/default/files/2017-05/oberheim_dsx.jpg\",\n        id: 4,\n        clicked: 0\n      },\n      {\n        image:\n          \"http://www.vintagesynth.com/sites/default/files/2017-05/ms20.jpg\",\n        id: 5,\n        clicked: 0\n      },\n      {\n        image:\n          \"http://www.vintagesynth.com/sites/default/files/2017-05/ensoniq_asr10.jpg\",\n        id: 6,\n        clicked: 0\n      },\n      {\n        image:\n          \"http://www.vintagesynth.com/sites/default/files/2017-05/fairlight_cmi_ii.jpg\",\n        id: 7,\n        clicked: 0\n      },\n      {\n        image:\n          \"http://www.vintagesynth.com/sites/default/files/2017-05/sci_prophet5.jpg\",\n        id: 8,\n        clicked: 0\n      }\n    ],\n    score: 0,\n    highscore: 0\n  };\n\n  initial = [\n    {\n      image: \"http://www.vintagesynth.com/sites/default/files/2017-05/p08.jpg\",\n      id: 0,\n      clicked: 0\n    },\n    {\n      image:\n        \"http://www.vintagesynth.com/sites/default/files/2017-05/vermona_drm1_mkiii.jpg\",\n      id: 1,\n      clicked: 0\n    },\n    {\n      image:\n        \"http://www.vintagesynth.com/sites/default/files/2017-05/buchla700_audities.jpg\",\n      id: 2,\n      clicked: 0\n    },\n    {\n      image:\n        \"http://www.vintagesynth.com/sites/default/files/2017-05/minitmoog.jpg\",\n      id: 3,\n      clicked: 0\n    },\n    {\n      image:\n        \"http://www.vintagesynth.com/sites/default/files/2017-05/oberheim_dsx.jpg\",\n      id: 4,\n      clicked: 0\n    },\n    {\n      image: \"http://www.vintagesynth.com/sites/default/files/2017-05/ms20.jpg\",\n      id: 5,\n      clicked: 0\n    },\n    {\n      image:\n        \"http://www.vintagesynth.com/sites/default/files/2017-05/ensoniq_asr10.jpg\",\n      id: 6,\n      clicked: 0\n    },\n    {\n      image:\n        \"http://www.vintagesynth.com/sites/default/files/2017-05/fairlight_cmi_ii.jpg\",\n      id: 7,\n      clicked: 0\n    },\n    {\n      image:\n        \"http://www.vintagesynth.com/sites/default/files/2017-05/sci_prophet5.jpg\",\n      id: 8,\n      clicked: 0\n    }\n  ];\n\n  componentDidMount() {\n    console.log(\"hello\");\n  }\n\n  handlePictureClick = id => {\n    console.log(\"more points\");\n\n    this.setState({\n      score: this.state.score + id\n    });\n\n    this.setClickedTrue(id);\n    this.setState({\n      highscore: this.state.score\n    });\n  };\n\n  setClickedTrue = id => {\n    console.log(\"Set the state to true id: \" + id);\n    let images = [...this.state.synths];\n    const imageClicked = images.find(item => {\n      return item.id === id;\n    });\n\n    if (!imageClicked.clicked) {\n      imageClicked.clicked = 1;\n      this.setState(imageClicked);\n      console.log(imageClicked);\n    } else {\n      alert(\"you lose\");\n      this.setState({ score: 0 });\n\n      this.setState({ synths: this.initial });\n    }\n    console.log(imageClicked);\n  };\n\n  shuffleArray = array => {\n    this.setState({ synths: this.shuffle(this.state.synths) });\n  };\n\n  shuffle = array => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav scores={this.state.score} highscore={this.state.highscore} />\n        <Jumbo />\n        <Main\n          synthImage={this.state.synths}\n          handlePictureClick={this.handlePictureClick}\n          shuffleArray={this.shuffleArray}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SynthyClicky;\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport SynthyClicky from \"./pages/SynthyClicky\";\n\nfunction App() {\n  return (\n    <div>\n      <SynthyClicky />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}